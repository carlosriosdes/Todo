// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApp.Infraestructure.Data.Context;

#nullable disable

namespace TodoApp.Infraestructure.Data.Migrations
{
    [DbContext(typeof(TodoAppDBContext))]
    partial class TodoAppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TodoApp.Domain.Models.Todo", b =>
                {
                    b.Property<int>("IdTodo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTodo"));

                    b.Property<int>("IdTodoState")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTodo");

                    b.HasIndex("IdTodoState");

                    b.ToTable("Todo", (string)null);
                });

            modelBuilder.Entity("TodoApp.Domain.Models.TodoStates", b =>
                {
                    b.Property<int>("IdTodoState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTodoState"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTodoState");

                    b.ToTable("TodoStates", (string)null);
                });

            modelBuilder.Entity("TodoApp.Domain.Models.Todo", b =>
                {
                    b.HasOne("TodoApp.Domain.Models.TodoStates", "TodoState")
                        .WithMany("Todos")
                        .HasForeignKey("IdTodoState")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoState");
                });

            modelBuilder.Entity("TodoApp.Domain.Models.TodoStates", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
